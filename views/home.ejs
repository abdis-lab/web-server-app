<!DOCTYPE html>
<html>
<head>
  <title>Movie Database</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  
  <script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
  <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  <link rel="stylesheet" href="/styles/home.css">
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>Movie Database</h1>
    </div>
    <div class="content">
      <div class="movie-list" id="movie-list"></div>
      <div class="movie-detail" id="movie-detail"></div>
    </div>
  </div>

  <script type="text/babel">
    const { useState, useEffect } = React;

    const fetchItems = async () => {
      const response = await fetch('/api/movies');
      const data = await response.json();
      return data;
    };

    const Item = ({ item, onSelect }) => (
      <div className="movie-card" onClick={() => onSelect(item)}>
        <h2>{item.title}</h2>
        <p><strong>Director:</strong> {item.director}</p>
        <p><strong>Year:</strong> {item.year}</p>
        <p><strong>Genre:</strong> {item.genre}</p>
        <p className="rating"><strong>Rating:</strong> {item.rating} <i className="fas fa-star"></i></p>
        <p className="duration"><strong>Duration:</strong> {item.duration} mins</p>
      </div>
    );

    const ItemList = ({ items, onSelect }) => (
      <div>
        {items.map(item => (
          <Item key={item._id} item={item} onSelect={onSelect} />
        ))}
      </div>
    );

    const Detail = ({ item, onChange, onSave, onDelete, onClear }) => (
      <div className="movie-card">
        <h2>{item._id ? 'Edit Movie Details' : 'Add New Movie'}</h2>
        <form>
          <label>Title</label>
          <input type="text" value={item.title} onChange={e => onChange('title', e.target.value)} />
          <label>Director</label>
          <input type="text" value={item.director} onChange={e => onChange('director', e.target.value)} />
          <label>Year</label>
          <input type="number" value={item.year} onChange={e => onChange('year', e.target.value)} />
          <label>Genre</label>
          <input type="text" value={item.genre} onChange={e => onChange('genre', e.target.value)} />
          <label>Rating</label>
          <input type="number" step="0.1" value={item.rating} onChange={e => onChange('rating', e.target.value)} />
          <label>Duration</label>
          <input type="number" value={item.duration} onChange={e => onChange('duration', e.target.value)} />
          <label>Synopsis</label>
          <input type="text" value={item.synopsis} onChange={e => onChange('synopsis', e.target.value)} />
          <button type="button" className="save-btn" onClick={onSave}>{item._id ? 'Save Changes' : 'Add Movie'}</button>
          {item._id && <button type="button" className="delete-btn" onClick={onDelete}>Delete</button>}
          <button type="button" className="clear-btn" onClick={onClear}>Clear</button>
        </form>
      </div>
    );

    const App = () => {
      const [items, setItems] = useState([]);
      const [selectedItem, setSelectedItem] = useState(null);

      useEffect(() => {
        const loadItems = async () => {
          const data = await fetchItems();
          setItems(data);
        };
        loadItems();
      }, []);

      const handleSelectItem = (item) => {
        setSelectedItem(item);
      };

      const handleChange = (field, value) => {
        setSelectedItem({ ...selectedItem, [field]: value });
      };

      const handleSave = async () => {
        const method = selectedItem._id ? 'PUT' : 'POST';
        const response = await fetch(`/api/movies${selectedItem._id ? `/${selectedItem._id}` : ''}`, {
          method,
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(selectedItem),
        });
        const data = await response.json();
        setItems(prevItems => {
          const newItems = prevItems.filter(item => item._id !== data._id);
          return [...newItems, data];
        });
        setSelectedItem(null);
      };

      const handleDelete = async () => {
        if (selectedItem._id) {
          await fetch(`/api/movies/${selectedItem._id}`, { method: 'DELETE' });
          setItems(prevItems => prevItems.filter(item => item._id !== selectedItem._id));
          setSelectedItem(null);
        }
      };

      const handleClear = () => {
        setSelectedItem(null);
      };

      const handleAddNew = () => {
        setSelectedItem({
          title: '',
          director: '',
          year: '',
          genre: '',
          rating: '',
          duration: '',
          synopsis: ''
        });
      };

      return (
        <div className="container">
          <div className="header">
            <h1>Movies</h1>
            <button className="add-new-btn" onClick={handleAddNew}>Add New Movie</button>
          </div>
          <div className="content">
            <div className="movie-list">
              <ItemList items={items} onSelect={handleSelectItem} />
            </div>
            <div className="movie-detail">
              {selectedItem && (
                <Detail
                  item={selectedItem}
                  onChange={handleChange}
                  onSave={handleSave}
                  onDelete={handleDelete}
                  onClear={handleClear}
                />
              )}
            </div>
          </div>
        </div>
      );
    };

    ReactDOM.render(<App />, document.getElementById('movie-list'));
  </script>
</body>
</html>